<project name="xml-filter" basedir="." default="main">

    <!--

    To run type:

    ant -Dfile=d:/sample.xml -Dfilter="apple" -DoutputFile="d:\o.txt" -DinputNodeName="Lala" -Dparser="sax"

    -->

    <!--input parameters-->
    <property name="file" value=""/>
    <property name="filter" value=""/>
    <property name="outputFile" value=""/>
    <property name="inputNodeName" value=""/>
    <property name="parser" value=""/>

    <!--build internal variables-->
    <property name="src.dir" value="src"/>
    <property name="resource.dir" value="src/main/resources"/>
    <property name="test.dir" value="src/test"/>
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.jar.dir" value="${build.dir}/jar"/>
    <property name="build.resources.dir" value="${build.dir}/resources"/>

    <property name="main-class" value="com.main.xmlfilter.XmlFilterMain"/>

    <path id="application" location="${build.jar.dir}/${ant.project.name}.jar"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="copy-resources">
        <copy todir="${build.classes.dir}">
            <fileset dir="${resource.dir}"/>
        </copy>

    </target>

    <target name="compile" depends="copy-resources">
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" classpathref="classpath" includeantruntime="false"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${build.jar.dir}"/>
        <jar destfile="${build.jar.dir}/${ant.project.name}.jar" basedir="${build.classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>
            <arg value="${file}"/>
            <arg value="${filter}"/>
            <arg value="${outputFile}"/>
            <arg value="${inputNodeName}"/>
            <arg value="${parser}"/>
        </java>
    </target>

    <target name="test" depends="jar">
        <junit printsummary="yes">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>

            <batchtest fork="yes">
                <fileset dir="${test.dir}" includes="*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

</project>